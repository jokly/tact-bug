;;
;; Header files for NFTItem
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_string_builder_start
tuple __tact_string_builder_start(builder b) inline;

;; __tact_string_builder_start_string
tuple __tact_string_builder_start_string() inline;

;; __tact_string_builder_end
cell __tact_string_builder_end(tuple builders) inline;

;; __tact_string_builder_append
((tuple), ()) __tact_string_builder_append(tuple builders, slice sc) inline_ref;

;; __tact_int_to_string
slice __tact_int_to_string(int src) inline_ref;

;; $Transfer$_load
(slice, ((int, slice, slice, cell, int, slice))) $Transfer$_load(slice sc_0) inline_ref;

;; $OwnershipAssigned$_store
builder $OwnershipAssigned$_store(builder build_0, (int, slice, slice) v) inline;

;; $OwnershipAssigned$_store_cell
cell $OwnershipAssigned$_store_cell((int, slice, slice) v) inline;

;; $Excesses$_store
builder $Excesses$_store(builder build_0, (int) v) inline;

;; $Excesses$_store_cell
cell $Excesses$_store_cell((int) v) inline;

;; $GetStaticData$_load
(slice, ((int))) $GetStaticData$_load(slice sc_0) inline;

;; $ReportStaticData$_store
builder $ReportStaticData$_store(builder build_0, (int, int, slice) v) inline;

;; $ReportStaticData$_store_cell
cell $ReportStaticData$_store_cell((int, int, slice) v) inline;

;; $NFTItem$_store
builder $NFTItem$_store(builder build_0, (slice, int, int, slice, cell) v) inline;

;; $NFTItem$_load
(slice, ((slice, int, int, slice, cell))) $NFTItem$_load(slice sc_0) inline;

;; $NftData$_to_external
(int, int, slice, slice, cell) $NftData$_to_external(((int, int, slice, slice, cell)) v) inline;

;; $NFTItem$init$_load
(slice, ((slice, int))) $NFTItem$init$_load(slice sc_0) inline;

;; $global_emptyCell
cell $global_emptyCell() impure inline;

;; $NFTItem$_contract_init
(slice, int, int, slice, cell) $NFTItem$_contract_init(slice $collection_address, int $index) impure inline_ref;

;; $NFTItem$_contract_load
(slice, int, int, slice, cell) $NFTItem$_contract_load() impure inline_ref;

;; $NFTItem$_contract_store
() $NFTItem$_contract_store((slice, int, int, slice, cell) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $Context$_fun_readForwardFee
int $Context$_fun_readForwardFee((int, slice, int, slice) $self) impure inline_ref;

;; $NftData$_constructor_is_initialized_index_collection_address_owner_address_individual_content
((int, int, slice, slice, cell)) $NftData$_constructor_is_initialized_index_collection_address_owner_address_individual_content(int is_initialized, int index, slice collection_address, slice owner_address, cell individual_content) inline;

;; $NFTItem$_fun_get_nft_data
((slice, int, int, slice, cell), (int, int, slice, slice, cell)) $NFTItem$_fun_get_nft_data((slice, int, int, slice, cell) $self) impure inline_ref;

;; $NFTItem$_fun__transfer_estimate_rest_value
((slice, int, int, slice, cell), int) $NFTItem$_fun__transfer_estimate_rest_value((slice, int, int, slice, cell) $self, (int, slice, int, slice) $ctx) impure inline;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline;

;; $Excesses$_constructor_query_id
((int)) $Excesses$_constructor_query_id(int query_id) inline;

;; $NFTItem$_fun__mint
((slice, int, int, slice, cell), ()) $NFTItem$_fun__mint((slice, int, int, slice, cell) $self, (int, slice, int, slice) $ctx, (int, slice, slice, cell, int, slice) $msg) impure inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline;

;; $OwnershipAssigned$_constructor_query_id_prev_owner_forward_payload
((int, slice, slice)) $OwnershipAssigned$_constructor_query_id_prev_owner_forward_payload(int query_id, slice prev_owner, slice forward_payload) inline;

;; $NFTItem$_fun__transfer
((slice, int, int, slice, cell), ()) $NFTItem$_fun__transfer((slice, int, int, slice, cell) $self, (int, slice, int, slice) $ctx, (int, slice, slice, cell, int, slice) $msg, int $remain) impure inline;

;; $ReportStaticData$_constructor_query_id_index_collection
((int, int, slice)) $ReportStaticData$_constructor_query_id_index_collection(int query_id, int index, slice collection) inline;
